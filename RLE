### **RLE (Run-Length Encoding)**՝ կամ **Տողային կոդավորում

**Run-Length Encoding (RLE)**՝ կամ **Տողային կոդավորում**, մի պարզ ու արդյունավետ տվյալների կոդավորման մեթոդ է, որը օգտագործվում է կրկնվող տվյալների համեմատաբար փոքր չափերով ներկայացնելու համար։ Այս մեթոդը հատկապես արդյունավետ է այն դեպքերում, երբ տվյալների մեջ կան երկար սեգմենտներ, որտեղ նույն արժեքը կրկնվում է մի քանի անգամ։

#### RLE-ի հիմնական սկզբունքը

RLE մեթոդը գործում է այնքանով, որ երբ նույն տողը կամ նույն նիշը կրկնվում է մի քանի անգամ (օրինակ՝ շատ նույն նշաններ կամ թվեր), դրանք փոխարինվում են այդ նշանի կամ թվի ու դրա կրկնությունների քանակով։ Արդյունքում՝ տվյալների պահպանումը դառնում է ավելի արդյունավետ, երբ նույն տվյալները բազմաթիվ անգամ կրկնվում են։

**Օրինակ**  
Եթե ունենք հետևյալ տեքստը.  
`AAAABBBCCDAA`

RLE կոդավորման մեջ դա կդառնա.
```
4A3B2C1D2A
```

Այստեղ `4A` նշանակում է՝ «A»-ն կրկնվում է 4 անգամ, `3B` նշանակում է՝ «B»-ն կրկնվում է 3 անգամ և այլն։

#### RLE-ի աշխատանքը

1. **Դրամատիկ տվյալների կրճատում**  
   RLE-ի հիմնական նպատակը տվյալների չափը կրճատելն է, հատկապես այն ժամանակ, երբ տվյալները պարունակում են բազմաթիվ կրկնվող տարրեր։ Օրինակ, եթե տվյալները ունեն նմանատիպ նիշերի մեծ զանգվածներ՝ RLE մեթոդը թույլ է տալիս դրանք պահպանել ավելի կոմպակտ ձևով։

2. **Հիմնական քայլերը**  
   - Տվյալները սկսում ենք կարդալ՝ ըստ հերթականության:
   - Հետևաբար, եթե նույն նիշը կրկնվում է, մենք վերը նշված ձևով այն փոխարինում ենք նշանով և նրա կրկնությունների քանակով։
   - Այսպես շարունակվում է մինչև ամբողջ տողը (որինից հետո ստացվում է կոդավորված արդյունքը)։

#### Օրինակներ

1. **Ստանդարտ տող**  
   Տեքստը՝ `AAAABBBCCDAA`  
   RLE կոդավորումը՝ `4A3B2C1D2A`

2. **Բազմաթիվ կրկնողներ**  
   Տեքստը՝ `BBBBBBBBBB`  
   RLE կոդավորումը՝ `10B`

3. **Հակառակ դեպքը (առանց կրկնությունների)**  
   Տեքստը՝ `ABCDE`  
   RLE կոդավորումը՝ `1A1B1C1D1E`

#### RLE-ի առավելությունները

- **Պարզություն**՝ RLE-ը շատ պարզ է իր կիրառման մեջ։ Դա դյուրին է տարբեր ծրագրավորողների և մշակողների համար, քանի որ այն ոչ թե կապված է բարդ կոդավորումների կամ գաղտնագրերի հետ, այլ պարզապես թվերի և նիշերի միացման բազային գործողություն է։
- **Հեշտություն և արագություն**՝ RLE-ն արագ մեթոդ է, քանի որ յուրաքանչյուր կրկնողության դեպքում անհրաժեշտ է միայն մեկ գործողություն՝ նշանավորել և հաշվել կրկնությունները։
- **Դիրքային նվազեցում**՝ RLE մեթոդը շատ արդյունավետ է այն դեպքերում, երբ տվյալների մեջ կան երկար կրկնվող մասեր։ Օրինակ, եթե տվյալները պարունակում են միայն մի քանի տարբեր նշաններ կամ թվեր, ապա RLE-ն կարող է շատ արդյունավետ լինել։

#### RLE-ի թերությունները

- **Որպես ընդհանուր կոդավորում՝ այն ոչ միշտ արդյունավետ է**՝ հատկապես, երբ տվյալները չեն պարունակում բազմաթիվ կրկնություններ։ Օրինակ, երբ տվյալներն ունեն տարբեր նիշեր կամ արժեքներ՝ այն չի առաջացնում կրճատում։
- **Տվյալների չափի աճ**՝ երբ տվյալների մեջ շատ տարբերանշաններ կամ արժեքներ կան, RLE կոդավորումը կարող է նույնիսկ ավելացնել տվյալների չափը, քանի որ յուրաքանչյուր նշանի համար անհրաժեշտ է նշել դրա կրկնությունների քանակը։
  
  Օրինակ, եթե մենք ունենք տեքստ՝ `ABCDE`, RLE կոդավորումը կլինի `1A1B1C1D1E`, ինչը հենց նույն երկարությունն է, ինչ սկզբնական տողը։ Այդպես, RLE-ը իրականում «անարդյունավետ» է, երբ տվյալներն անընդհատ փոփոխվում են։

#### Պրակտիկ կիրառումներ

1. **Գրաֆիկական ֆայլեր**  
   RLE-ն ամենից հաճախ կիրառվում է գրաֆիկական ֆայլերի (օրինակ՝ BMP կամ TIFF ֆայլեր) կոդավորման մեջ։ Այն օգտագործվում է նկարներում, որտեղ գույները կամ պիքսելները շատ անգամ կրկնվում են։ Օրինակ, եթե նկարի մեջ շատ մեծ տարածք ունի նույն գույնը, այն շատ արդյունավետ կլինի RLE մեթոդով կոդավորել։

2. **Տեքստային տվյալների կրճատում**  
   RLE-ն նաև կարող է օգտագործվել այնպիսի տեքստերում, որտեղ կան բազմաթիվ կրկնություններ։ Որպես օրինակ՝ ասենք, եթե մենք ունենք գրառումներ, որոնք ունեն նույն բառերը մի քանի անգամ, ապա RLE-ն կկրճատի ֆայլի չափը։

3. **Դիագնոստիկ տվյալների խտացում**  
   RLE-ն կարող է կիրառվել նաև՝ բժշկական կամ ինժեներական տվյալների խտացման համար, որտեղ որոշակի չափի տվյալների մեջ կրկնվող բաներ կան։

### Խնդիրներ

RLE-ն հիմնականում կիրառվում է, երբ տվյալները պարունակում են երկար կրկնվող մասեր, սակայն այն կարող է չպատշաճ գործել, երբ տվյալները բազմազան են։ Սա նշանակում է, որ այն հաճախ ավելի շատ տեղ է զբաղեցնում, քան սովորական առանց կոդավորման տվյալները։

**Օրինակ**  
Եթե մենք ունենք հետևյալ տեքստը՝  
`XZXZXZXZ`

RLE կոդավորումը կլինի՝  
`1X1Z1X1Z1X1Z1X1Z`

Եվ այդ դեպքում ֆայլը կվերադառնա ավելի երկար, քան այն սկզբնական չափը։

### Հանգիստ

RLE-ն արդյունավետ է այն իրավիճակներում, երբ տվյալները շատ կրկնվող հատվածներ ունեն, բայց ոչ այդքան օգտակար կլինի տվյալների համար, որտեղ տարբերանշանները հաճախ փոփոխվում են։
